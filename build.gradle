
buildscript {

	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	
	repositories {
		maven {
	      url "https://plugins.gradle.org/m2/"
	    }
		mavenCentral()
	}
	
	dependencies {
	    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath("org.yaml:snakeyaml:1.17+")
		classpath("org.openapitools:openapi-generator-gradle-plugin:3.3.4")
    	classpath("net.ltgt.gradle:gradle-apt-plugin:0.20")
	}
}

plugins {
  id 'java'
  id 'idea'
  id 'net.ltgt.apt' version '0.9'
  id "org.sonarqube" version "2.7"
}

//apply plugin: 'java'
apply plugin: 'org.openapi.generator'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' 


//apply from: "$rootDir/integtest.gradle" 
apply from: "$rootDir/jacoco.gradle" 
apply from: "$rootDir/sonarqube.gradle"


configurations {
	generatedCompile
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}


group = 'com.ellisdon.caas'
version = '1.0.0-SNAPSHOT'
description='CAAS sql tail service implementation'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

ext['springCloudVersion'] = 'Finchley.RELEASE'

dependencies {

	compile('com.github.shyiko:mysql-binlog-connector-java:0.20.1')
	compileOnly 'org.projectlombok:lombok:1.18.6'
	annotationProcessor 'org.projectlombok:lombok:1.18.6'
	compile group: 'commons-io', name: 'commons-io', version: '2.6'



	generatedCompile('org.springframework.boot:spring-boot-starter')
	generatedCompile('org.springframework.boot:spring-boot-starter-web')
	generatedCompile('org.springframework.boot:spring-boot-starter-security')
	generatedCompile('org.springframework.boot:spring-boot-starter-actuator')
	generatedCompile('io.springfox:springfox-swagger2:2.7.0')
	generatedCompile('io.springfox:springfox-swagger-ui:2.7.0')
	generatedCompile('joda-time:joda-time:2.9.9')
	generatedCompile('org.mapstruct:mapstruct-jdk8:1.2.0.Final')
	generatedCompile('org.apache.commons:commons-lang3:3.8.1')
	compile('joda-time:joda-time:2.9.9')
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.cloud:spring-cloud-stream')
	compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
	compile('org.springframework.cloud:spring-cloud-starter-openfeign')
	compile('io.github.openfeign:feign-httpclient:9.5.0')

	compile('io.springfox:springfox-swagger2:2.7.0')
	compile('io.springfox:springfox-swagger-ui:2.7.0')
	compile('org.apache.commons:commons-lang3:3.8.1')
	compile('org.apache.commons:commons-collections4:4.0')
	compile('com.fasterxml.jackson.datatype:jackson-datatype-joda:2.9.6')

	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.8'

	compile 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.1.RELEASE'
	compile('com.okta.spring:okta-spring-boot-starter:0.6.0')

//	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('mysql:mysql-connector-java:8.0.15')
	compile('com.google.code.gson:gson:2.8.6')

	compile('com.google.cloud:google-cloud-storage:1.102.0')


	compile group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'

}


dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

sourceSets.main.java.srcDirs = ['src/main/java',
								'build/generated/sources/api/server/src/main/java',
								'build/generated/sources/api/client/src/main/java',
								'build/generated/sources/annotationProcessor/java/main'
							    ]

sourceSets {
	generated {
		compileClasspath = configurations.generatedCompile 
	}
	main {
		compileClasspath += generated.output
		runtimeClasspath += generated.output
	}
	test {
		compileClasspath += generated.output
		runtimeClasspath += generated.output
	}
	integrationTest {
		java
		resources
		compileClasspath += generated.output
		runtimeClasspath += generated.output
	}
}

compileJava {
     options.compilerArgs = [
        "-Amapstruct.suppressGeneratorTimestamp=true",
        "-Amapstruct.suppressGeneratorVersionInfoComment=true",
        "-Amapstruct.defaultComponentModel=spring",
        "-Amapstruct.unmappedTargetPolicy=IGNORE"
    ]
}

jar {
	from sourceSets.generated.output
	exclude('src/main/resources/logback-spring.xml')
	exclude('src/main/resources/application.properties')
	
}

bootRun {
	systemProperties = System.properties
	classpath += sourceSets.generated.output
}

classes.dependsOn generatedClasses
compileJava.dependsOn compileGeneratedJava

wrapper {
	gradleVersion = '4.10.2'
}


